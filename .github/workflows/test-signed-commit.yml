name: Test Signed Commit Action

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'signed-commit/**'
      - '.github/workflows/test-signed-commit.yml'

jobs:
  fetch-secrets:
    permissions:
      id-token: write
    uses: ministryofjustice/modernisation-platform-github-actions/.github/workflows/aws-secrets-management.yml@c25ccb3c17e1ac869ceafc5430a4caf7e39be2ee # v3.4.0
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER: ${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}
      PASSPHRASE: ${{ secrets.PASSPHRASE }}

  test-signed-commit:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Decrypt Secrets
        uses: ministryofjustice/modernisation-platform-github-actions/decrypt-secrets@c25ccb3c17e1ac869ceafc5430a4caf7e39be2ee # v3.4.0
        with:
          slack_webhook_url: ${{ needs.fetch-secrets.outputs.slack_webhook_url }}
          terraform_github_token: ${{ needs.fetch-secrets.outputs.terraform_github_token }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Checkout the repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Prepare Git options
        run: bash ./scripts/git-setup.sh

      - name: Create test branch with change
        run: |
          test_branch="test/signed-commit-${RANDOM}-${RANDOM}"
          git checkout -b "$test_branch"
          echo "// test $(date)" >> test-file.txt
          git add test-file.txt
          git commit -m "chore: add test file for signed commit action"
          git push origin "$test_branch"
          echo "TEST_BRANCH=$test_branch" >> $GITHUB_ENV

      - name: Run Signed Commit Action
        uses: ./signed-commit
        with:
          github_token: ${{ secrets.terraform_github_token }}
          git_path: "."
          pr_title: "Test Signed Commit Action PR"
          pr_body: "Automated test PR from Signed Commit Action"

      - name: Verify commit & PR creation (manual or scripted)
        run: |
          echo "Test branch: $TEST_BRANCH"
          git fetch origin "$TEST_BRANCH"
          git log origin/"$TEST_BRANCH" --oneline -5
          # Optionally list PRs with gh CLI
          gh pr list --head "$TEST_BRANCH" --json number,title,state

      - name: Cleanup test branch and PR
        if: always()
        run: |
          echo "Cleaning up test branch and PR..."
          gh pr list --head "$TEST_BRANCH" --json number -q '.[].number' | xargs -r -I{} gh pr close {} --delete-branch || true
          git push origin --delete "$TEST_BRANCH" || true
