name: AWS Secrets Retrieval and Encryption

on:
  workflow_call:
    inputs:
      aws_region:
        required: false
        type: string
        default: "eu-west-2"
        description: "Specifies the AWS region"
    outputs:
      modernisation_pat_multirepo:
        value: ${{ jobs.retrieve-secrets.outputs.modernisation_pat_multirepo }}
      gov_uk_notify_api_key:
        value: ${{ jobs.retrieve-secrets.outputs.gov_uk_notify_api_key }}
      environment_management: 
        value: ${{ jobs.retrieve-secrets.outputs.environment_management }}
      pagerduty_token: 
        value: ${{ jobs.retrieve-secrets.outputs.pagerduty_token }}
      pagerduty_userapi_token: 
        value: ${{ jobs.retrieve-secrets.outputs.pagerduty_userapi_token }}
      slack_webhooks: 
        value: ${{ jobs.retrieve-secrets.outputs.slack_webhooks }}
      slack_webhook_url: 
        value: ${{ jobs.retrieve-secrets.outputs.slack_webhook_url }}
      terraform_github_token: 
        value: ${{ jobs.retrieve-secrets.outputs.terraform_github_token }}
    secrets:
      MODERNISATION_PLATFORM_ACCOUNT_NUMBER:
        description: "Modernisation Platform Account Number"
        required: true
      PASSPHRASE:
        description: "Passphrase used for GPG decryption"
        required: true

jobs:
  retrieve-secrets:
    runs-on: ubuntu-latest
    outputs:
      modernisation_pat_multirepo: ${{ steps.encrypt-outputs.outputs.modernisation_pat_multirepo }}
      gov_uk_notify_api_key: ${{ steps.encrypt-outputs.outputs.gov_uk_notify_api_key }}
      environment_management: ${{ steps.encrypt-outputs.outputs.environment_management }}
      pagerduty_token: ${{ steps.encrypt-outputs.outputs.pagerduty_token }}
      pagerduty_userapi_token: ${{ steps.encrypt-outputs.outputs.pagerduty_userapi_token }}
      slack_webhooks: ${{ steps.encrypt-outputs.outputs.slack_webhooks }}
      slack_webhook_url: ${{ steps.encrypt-outputs.outputs.slack_webhook_url }}
      terraform_github_token: ${{ steps.encrypt-outputs.outputs.terraform_github_token }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: "arn:aws:iam::${{ secrets.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}:role/github-actions-read-secrets"
          role-session-name: githubactionsrolesession
          aws-region: ${{ inputs.aws_region }}
          
      - name: Retrieve Secrets from AWS Secrets Manager
        uses: aws-actions/aws-secretsmanager-get-secrets@5e19ff380d035695bdd56bbad320ca535c9063f2 #v2.0.9
        with:
          secret-ids: |
            MODERNISATION_PAT_MULTIREPO,modernisation_pat_multirepo
            GOV_UK_NOTIFY_API_KEY,gov_uk_notify_api_key
            MODERNISATION_PLATFORM_ENVIRONMENTS,environment_management
            PAGERDUTY_TOKEN,pagerduty_token
            PAGERDUTY_USERAPI_TOKEN,pagerduty_userapi_token
            SLACK_WEBHOOKS,slack_webhooks
            SLACK_WEBHOOK_URL,slack_webhook_url
            TERRAFORM_GITHUB_TOKEN,github_ci_user_pat

      - name: Set outputs
        id: encrypt-outputs
        run: |
          modernisation_pat_multirepo=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSPHRASE }}" --output - <(echo "$MODERNISATION_PAT_MULTIREPO") | base64 -w0)
          echo "modernisation_pat_multirepo=$modernisation_pat_multirepo" >> $GITHUB_OUTPUT

          gov_uk_notify_api_key=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSPHRASE }}" --output - <(echo "$GOV_UK_NOTIFY_API_KEY") | base64 -w0)
          echo "gov_uk_notify_api_key=$gov_uk_notify_api_key" >> $GITHUB_OUTPUT

          environment_management=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSPHRASE }}" --output - <(echo "$MODERNISATION_PLATFORM_ENVIRONMENTS") | base64 -w0)
          echo "environment_management=$environment_management" >> $GITHUB_OUTPUT

          pagerduty_token=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSPHRASE }}" --output - <(echo "$PAGERDUTY_TOKEN") | base64 -w0)
          echo "pagerduty_token=$pagerduty_token" >> $GITHUB_OUTPUT

          pagerduty_userapi_token=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSPHRASE }}" --output - <(echo "$PAGERDUTY_USERAPI_TOKEN") | base64 -w0)
          echo "pagerduty_userapi_token=$pagerduty_userapi_token" >> $GITHUB_OUTPUT

          slack_webhooks=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSPHRASE }}" --output - <(echo "$SLACK_WEBHOOKS") | base64 -w0)
          echo "slack_webhooks=$slack_webhooks" >> $GITHUB_OUTPUT

          slack_webhook_url=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSPHRASE }}" --output - <(echo "$SLACK_WEBHOOK_URL") | base64 -w0)
          echo "slack_webhook_url=$slack_webhook_url" >> $GITHUB_OUTPUT

          terraform_github_token=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSPHRASE }}" --output - <(echo "$TERRAFORM_GITHUB_TOKEN") | base64 -w0)
          echo "terraform_github_token=$terraform_github_token" >> $GITHUB_OUTPUT
          
